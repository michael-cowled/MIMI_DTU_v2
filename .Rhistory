uvcount = 0
j = 1
while (j < 5)
if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(j)
}   else    {
j <- j+1
print(j)
}
uvcount = 0
j = 1
while (j < 5)
if (y[j] == NA) {
break
if else (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(j)
}   else    {
j <- j+1
print(j)
}
}
uvcount = 0
j = 1
while (j < 5)
if (y[j] == NA) {
break
ifelse (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(j)
}   else    {
j <- j+1
print(j)
}
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break
ifelse (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(j)
}   else    {
j <- j+1
print(j)
}
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
ifelse (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(j)
}   else    {
j <- j+1
print(j)
}
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
ifelse (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(uvcount)
}   else    {
j <- j+1
print(uvcount)
}
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
ifelse (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(uvcount)
else    {
j <- j+1
print(uvcount)
}
}
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   ifelse (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(uvcount)
}   else    {
j <- j+1
print(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   if else (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(uvcount)
}   else    {
j <- j+1
print(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   ifelse(x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(uvcount)
}   else    {
j <- j+1
print(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   if else (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(uvcount)
}   else    {
j <- j+1
print(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   else (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(uvcount)
}   else    {
j <- j+1
print(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
print(uvcount)
}   else    {
j <- j+1
print(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   if else (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (!is.na(y[j])) {
break()
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (is.na(y[j])) {
break()
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (is.na(y[j])) {
break()
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (is.na(y[j])) {
break()
uvcount <- uvcount + 1
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
uvcount = 0
uvcount = 0
j = 1
while (j < 5)
if (is.na(y[j])) {
break()
uvcount <- uvcount + 1
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
uvcount = 0
j = 1
while (j < 5)
if (is.na(y[j])) {
break()
cat(uvcount)
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
uvcount = 0
j = 1
while (j < 5) {
if (is.na(y[j])) {
break()
cat(uvcount)
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
}
uvcount = 0
j = 1
while (j < 5) {
if (is.na(y[j])) {
break()
cat(uvcount)
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat(uvcount)
}   else    {
j <- j+1
cat(uvcount)
}
}
print("loop finished")
uvcount = 0
j = 1
while (j < 5) {
if (is.na(y[j])) {
break()
cat("UV count should be", uvcount)
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount)
}   else    {
j <- j+1
cat("UV count is", uvcount)
}
}
print("loop finished")
uvcount = 0
j = 1
while (j < 5) {
if (is.na(y[j])) {
break()
cat("UV count should be", uvcount, "\n")
}   else if (x[1] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
cat("UV count is", uvcount, "\n")
}
}
print("loop finished")
uvcount = 0
j = 1
while (j < 5 && k < 5) {
if (is.na(y[j])) {
break()
cat("UV count should be", uvcount, "\n")
}   else if (x[k] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
print("loop finished")
uvcount = 0
j = 1
k = 1
while (j < 6 && k < 6) {
if (is.na(y[j])) {
break()
cat("UV count should be", uvcount, "\n")
}   else if (x[k] <= y[j] + 2 && x[1] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
print("loop finished")
uvcount = 0
j = 1
k = 1
while (j < 6 && k < 6) {
if (is.na(y[j])) {
break()
cat("UV count should be", uvcount, "\n")
}   else if (x[k] <= y[j] + 2 && x[k] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
print("loop finished")
uvcount = 0
j = 1
k = 1
while (j < 6 && k < 6) {
if (is.na(y[j])) {
cat("UV count should be", uvcount, "\n")
}   else if (x[k] <= y[j] + 2 && x[k] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
print("loop finished")
uvcount = 0
j = 1
k = 1
while (j < 6 && k < 6) {
if (is.na(y[j])) {
cat("UV count should be", uvcount, "\n")
k <- k+1
}   else if (x[k] <= y[j] + 2 && x[k] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
print("loop finished")
uvcount = 0
j = 1
k = 1
while (k < 6) {
while (j < 6) {
if (is.na(y[j])) {
cat("UV count should be", uvcount, "\n")
k <- k+1
}   else if (x[k] <= y[j] + 2 && x[k] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
}
uvcount = 0
j = 1
k = 1
while (k < 6) {
while (j < 6) {
if (is.na(y[j])) {
cat("UV count should be", uvcount, "\n")
j <- j+1
k <- k+1
}   else if (x[k] <= y[j] + 2 && x[k] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
uvcount = 0
j = 1
k = 1
while (k < 6) {
while (j < 6) {
if (is.na(y[j])) {
cat("UV count should be", uvcount, "\n")
j <- j+1
k <- k+1
}   else if (x[k] <= y[j] + 2 && x[k] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
}
print("loop finished")
uvcount = 0
j = 1
k = 1
while (k < 6) {
while (j < 6) {
if (is.na(y[j])) {
cat("UV count should be", uvcount, "\n")
j <- j+1
k <- k+1
}   else if (x[k] <= y[j] + 2 && x[k] >= y[j] - 2) {
uvcount <- uvcount + 1
j <- j+1
cat("UV count has", uvcount, "\n")
}   else    {
j <- j+1
k <- k+1
cat("UV count is", uvcount, "\n")
}
}
}
